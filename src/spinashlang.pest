
// spinach.pest

// === Root ===
start = { SOI ~ (_NL* ~ statement ~ _NL*)+ ~ EOI }

// === Statements ===
statement = { declaration | action }

// === Declarations ===
declaration = { qubit_declaration | list_declaration | instruction_declaration }

qubit_declaration = { NAME ~ ":" ~ "q"? ~ NUMBER }
bit_declaration = { NAME ~ ":" ~ "b" ~ NUMBER }
list_declaration = { NAME ~ ":" ~ list }
instruction_declaration = { NAME ~ ":" ~ gate_pip }

// === Gates ===
gate_pip = { (gate_pipe_by_name | gate) ~ ("|" ~ (gate | gate_pipe_by_name))* }
gate_pipe_by_name = { NAME ~ REVERSE_ARROW? }
gate = { UPPER_NAME ~ ("(" ~ args? ~ ")")? }
args = { (NAME | NUMBER) ~ ("," ~ (NAME | NUMBER))* }

// === Actions ===
action = { (NAME | NUMBER | list | ALL) ~ "->" ~ NUMBER? ~ gate_pip }

// === Lists ===
list = { "[" ~ (NAME | NUMBER) ~ ("," ~ (NAME | NUMBER))* ~ "]" }

// === Tokens ===
NAME = @{ ASCII_LOWER ~ (ASCII_ALPHANUMERIC | "_")* }
UPPER_NAME = @{ ASCII_UPPER+ }
NUMBER = @{ ASCII_DIGIT+ }
REVERSE_ARROW = @{ "<-" }
ALL = @{ "*" }

// === Whitespace and comments ===
_NL = _{ NEWLINE }
WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }

NEWLINE = _{ "\n" | "\r\n" }

SOI = _{ }
EOI = _{ }

WHITESPACE_RULE = _{ WHITESPACE | COMMENT | _NL }
WHITESPACE_OR_COMMENT = _{ WHITESPACE_RULE* }

